/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.11 public/modelos/MatrixIntercambiador.gltf --transform -j
Files: public/modelos/MatrixIntercambiador.gltf [28.94MB] >/modelos MatrixIntercambiador.glb [2.83MB] (90%)
*/

import React, { useRef } from "react";
import { useGLTF, PerspectiveCamera, useTexture } from "@react-three/drei";
import * as THREE from "three";
export function Modelo(props) {
  const { nodes, materials } = useGLTF("/modelos/MatrixIntercambiador.glb");
  Object.values(materials).forEach((material) => {
    material.side = THREE.FrontSide;
  });
  return (
    <group {...props} dispose={null}>
      <group position={[0.558, 4.322, -1.586]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh.geometry}
          material={materials.PaletteMaterial003}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_1.geometry}
          material={materials.PaletteMaterial004}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_2.geometry}
          material={materials.PaletteMaterial001}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Mesh_3.geometry}
          material={materials.PaletteMaterial002}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.matriz3_k_v_1.geometry}
        material={materials.Base1}
        position={[-3.711, 3.525, -1.407]}
      />
    </group>
  );
}

useGLTF.preload("/modelos/MatrixIntercambiador.glb");
